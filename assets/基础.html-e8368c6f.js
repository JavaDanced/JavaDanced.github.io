const e=JSON.parse('{"key":"v-ac78ed9a","path":"/note/java/%E5%9F%BA%E7%A1%80/%E5%9F%BA%E7%A1%80.html","title":"基础概念","lang":"zh-CN","frontmatter":{"title":"基础概念","category":["java"],"tag":["java"],"sticky":false,"star":false,"article":false,"timeline":false,"description":"Java特点 1.面向对象（封装，继承，多态） 2.平台无关性 （一次编写，随处运行） 3.可靠性（内存管理机制不用自己去处理指针、内存, 异常处理机制） 4.安全性（Java存储分配模型是防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内存和伪造指针去指向存储器；再例如限制访问权限修饰符） 5.丰富的资源库、强大的生态 JD...","head":[["meta",{"property":"og:url","content":"https://javadance.cn/note/java/%E5%9F%BA%E7%A1%80/%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"企鹅君"}],["meta",{"property":"og:title","content":"基础概念"}],["meta",{"property":"og:description","content":"Java特点 1.面向对象（封装，继承，多态） 2.平台无关性 （一次编写，随处运行） 3.可靠性（内存管理机制不用自己去处理指针、内存, 异常处理机制） 4.安全性（Java存储分配模型是防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内存和伪造指针去指向存储器；再例如限制访问权限修饰符） 5.丰富的资源库、强大的生态 JD..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-01T02:01:25.000Z"}],["meta",{"property":"article:author","content":"企鹅君"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2023-11-01T02:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"基础概念\\",\\"description\\":\\"Java特点 1.面向对象（封装，继承，多态） 2.平台无关性 （一次编写，随处运行） 3.可靠性（内存管理机制不用自己去处理指针、内存, 异常处理机制） 4.安全性（Java存储分配模型是防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内存和伪造指针去指向存储器；再例如限制访问权限修饰符） 5.丰富的资源库、强大的生态 JD...\\"}"]]},"headers":[{"level":2,"title":"Java特点","slug":"java特点","link":"#java特点","children":[]},{"level":2,"title":"JDK 和 JRE","slug":"jdk-和-jre","link":"#jdk-和-jre","children":[{"level":3,"title":"Java 和 C++ 区别","slug":"java-和-c-区别","link":"#java-和-c-区别","children":[]}]},{"level":2,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[]},{"level":2,"title":"多态实现原理","slug":"多态实现原理","link":"#多态实现原理","children":[]},{"level":2,"title":"抽象类和接口","slug":"抽象类和接口","link":"#抽象类和接口","children":[]},{"level":2,"title":"static和final关键字","slug":"static和final关键字","link":"#static和final关键字","children":[]},{"level":2,"title":"泛型以及泛型擦除","slug":"泛型以及泛型擦除","link":"#泛型以及泛型擦除","children":[]},{"level":2,"title":"反射原理以及使用场景","slug":"反射原理以及使用场景","link":"#反射原理以及使用场景","children":[]},{"level":2,"title":"Java异常体系","slug":"java异常体系","link":"#java异常体系","children":[]}],"git":{"createdTime":1698804085000,"updatedTime":1698804085000,"contributors":[{"name":"JavaDance","email":"zhang530i@163.com","commits":1}]},"readingTime":{"minutes":7.85,"words":2356},"filePathRelative":"note/java/基础/基础.md","localizedDate":"2023年11月1日","autoDesc":true,"excerpt":""}');export{e as data};
